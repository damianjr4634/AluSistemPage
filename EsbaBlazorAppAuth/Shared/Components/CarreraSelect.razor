<div class="top-row" style="">
    <div class="row align-items-center">
        <div class="col-2">
            <img style="height:60px" src="/img/esbalogo.webp"/>
        </div>    
        <div class="col-6">
            <b style="font-size:20px">Carreras</b> 
            <br>
            @if(Carreras != null) 
            {
                <RadzenDropDown AllowClear="false" TValue="string" style="width:500px; margin-top: 2px"
                                        Data=@Carreras TextProperty="NombreCarrera" ValueProperty="IdCarrera" 
                                        Change=@OnLocalChange  
                                        @bind-Value="@SelectedValue"/>
                <br>
                @if(_carreraSelected != null && _carreraSelected.Baja == "S")
                {
                    <span style="font-size:18px" >Estado <RadzenBadge BadgeStyle="BadgeStyle.Danger" IsPill="true" Text="BAJA" /> </span>
                }
                else if(_carreraSelected != null && _carreraSelected.Baja == "N")
                {
                    <span style="font-size:18px" >Estado <RadzenBadge BadgeStyle="BadgeStyle.Success" IsPill="true" Text="ACTIVO" /> </span>
                }
                
            }      
        </div>
        <div class="col-3">
            
        </div> 
    </div> 
    <hr/>
</div>

@code {
    [Parameter] 
    public EventCallback<AlumnoCarrera> OnChange { get; set; }
    
    [Parameter]
    public List<AlumnoCarrera> Carreras { get; set; }

    [Parameter]
    public string SelectedValue { get; set; }

    private AlumnoCarrera _carreraSelected;

    private async Task OnLocalChange(object value)
    {
        _carreraSelected = Carreras.Find(x => x.IdCarrera == (string)value);

        if (OnChange.HasDelegate)
        {
            await OnChange.InvokeAsync(_carreraSelected);
        }
    }

    protected override async Task OnParametersSetAsync()
    {
        if (!string.IsNullOrEmpty(SelectedValue))
        {
            _carreraSelected = Carreras.Find(x => x.IdCarrera == SelectedValue);   
        }
    }
}