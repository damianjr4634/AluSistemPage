@if(Visible)
{
<div class="modal fade show" style="display: block;">
    <div class="modal-dialog @Size modal-dialog-centered modal-dialog-scrollable">
        <div class="modal-content" style=@Style>

            <div class="modal-header" style="background-color: #1e358f">
                
                @if (Header != null)
                {
                    <h4 class="modal-title" style="color: white"><b>@Header</b></h4>
                }
                
                @if(EnabledDialogClose)
                {
                    <button type="button" class="close" @onclick="DialogClose"><i class="fa-solid fa-rectangle-xmark" style="color:white"></i></button>
                }
                else
                {
                    <button type="button" class="close" @onclick="DialogClose" disabled> <i class="fa-solid fa-rectangle-xmark" style="color:white"></i> </button>
                }
            </div>
            @if (ChildContent != null)
            {
                <div class="modal-body">
                    @ChildContent
                </div>
            }

            @if (Footer != null || CloseButtonText != "")
            {
                <div class="modal-footer" Style="background-color: #1e358f">
                    @Footer
                    @if (CloseButtonText != "")
                    {
                        @if(EnabledDialogClose)
                        {
                            <button type="button" class="btn btn-primary" @onclick="DialogClose">@CloseButtonText</button>
                        }
                        else
                        {
                            <button type="button" class="btn btn-primary" @onclick="DialogClose" disabled>@CloseButtonText</button>
                        }
                    }
                </div>
            }
        </div>
    </div>
</div>
<div class="modal-backdrop show"></div>
}

@code {
    [Parameter] public RenderFragment? ChildContent { get; set; }
    [Parameter] public String? Header { get; set; }
    [Parameter] public RenderFragment? Footer { get; set; }
    [Parameter] public bool Visible { get; set; }
    [Parameter] public EventCallback OnClose { get; set; }
    [Parameter] public string CloseButtonText { get; set; } = "Cerrar";
    [Parameter] public bool EnabledDialogClose { get; set; } = true;
    [Parameter] public string Size { get; set; } = "";
    [Parameter] public string Style { get; set; } = "";

    private async Task DialogClose()
    {
        Visible = false;
        if (OnClose.HasDelegate)
        {
            await OnClose.InvokeAsync();
        }
    }
}